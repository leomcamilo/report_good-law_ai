#!/usr/bin/env python3
"""
Script Simples - An√°lise Lei do Bem com DeepSeek
===============================================

Script simplificado para an√°lise r√°pida usando LangChain + DeepSeek.
"""

import os
import sys
from dotenv import load_dotenv
from analise_langchain_deepseek import AnalisadorLeiDoBemLangChain

# Carregar vari√°veis de ambiente
load_dotenv()

def verificar_configuracao():
    """Verifica se a configura√ß√£o est√° correta."""
    api_key = os.getenv('DEEPSEEK_API_KEY')
    if not api_key or api_key == 'your_deepseek_api_key_here':
        print("‚ùå ERRO: Chave da API do DeepSeek n√£o configurada!")
        print("\nüîß Para configurar:")
        print("1. Obtenha sua chave em: https://platform.deepseek.com/")
        print("2. Edite o arquivo .env")
        print("3. Substitua 'your_deepseek_api_key_here' pela sua chave")
        print("\nExemplo no .env:")
        print("DEEPSEEK_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxx")
        return False
    return True

def analise_rapida():
    """Executa uma an√°lise r√°pida com menos dados."""
    if not verificar_configuracao():
        return
    
    print("üöÄ Executando an√°lise r√°pida...")
    
    analisador = AnalisadorLeiDoBemLangChain()
    analise = analisador.executar_analise_completa(max_rows=30, salvar=True)
    
    if analise:
        print("\n‚úÖ An√°lise conclu√≠da!")
        print("üìÑ Resultado salvo em arquivo .md")
    else:
        print("‚ùå Falha na an√°lise")

def analise_completa():
    """Executa uma an√°lise completa com mais dados."""
    if not verificar_configuracao():
        return
    
    print("üöÄ Executando an√°lise completa (pode demorar mais)...")
    
    analisador = AnalisadorLeiDoBemLangChain()
    analise = analisador.executar_analise_completa(max_rows=100, salvar=True)
    
    if analise:
        print("\n‚úÖ An√°lise completa conclu√≠da!")
        print("üìÑ Resultado salvo em arquivo .md")
    else:
        print("‚ùå Falha na an√°lise")

def analise_customizada():
    """Permite an√°lise com par√¢metros customizados."""
    if not verificar_configuracao():
        return
    
    print("üîß An√°lise Customizada")
    print("======================")
    
    try:
        max_rows = int(input("N√∫mero de projetos para analisar (recomendado 30-100): ") or "50")
        salvar_arquivo = input("Salvar em arquivo? (s/N): ").lower().startswith('s')
        
        print(f"\nüöÄ Executando an√°lise de {max_rows} projetos...")
        
        analisador = AnalisadorLeiDoBemLangChain()
        analise = analisador.executar_analise_completa(max_rows=max_rows, salvar=salvar_arquivo)
        
        if analise:
            print(f"\n{'='*60}")
            print("üìã RESULTADO DA AN√ÅLISE")
            print(f"{'='*60}")
            print(analise[:2000] + "..." if len(analise) > 2000 else analise)
            print(f"\n{'='*60}")
            
            if salvar_arquivo:
                print("‚úÖ An√°lise salva em arquivo!")
        else:
            print("‚ùå Falha na an√°lise")
            
    except ValueError:
        print("‚ùå N√∫mero inv√°lido!")
    except KeyboardInterrupt:
        print("\n‚ùå Opera√ß√£o cancelada pelo usu√°rio")

def main():
    """Menu principal."""
    print("ü§ñ An√°lise Lei do Bem com DeepSeek")
    print("===================================")
    print("1. An√°lise R√°pida (30 projetos)")
    print("2. An√°lise Completa (100 projetos)")
    print("3. An√°lise Customizada")
    print("4. Verificar Configura√ß√£o")
    print("0. Sair")
    
    while True:
        try:
            opcao = input("\nEscolha uma op√ß√£o (0-4): ").strip()
            
            if opcao == "0":
                print("üëã At√© logo!")
                break
            elif opcao == "1":
                analise_rapida()
            elif opcao == "2":
                analise_completa()
            elif opcao == "3":
                analise_customizada()
            elif opcao == "4":
                if verificar_configuracao():
                    print("‚úÖ Configura√ß√£o OK!")
                else:
                    print("‚ùå Configura√ß√£o incompleta")
            else:
                print("‚ùå Op√ß√£o inv√°lida! Escolha 0-4.")
                
        except KeyboardInterrupt:
            print("\nüëã At√© logo!")
            break
        except Exception as e:
            print(f"‚ùå Erro inesperado: {e}")

if __name__ == "__main__":
    main()
